@page "/login"
@using Blazorise
@layout LoginLayout
@using System.ComponentModel.DataAnnotations
@using Sample_BlazorWeb.Model
@using FluentValidation
@using Blazorise.FluentValidation
@inject IValidator<LoginModel> loginModelValidator

<div class="container mt-5">
    <Steps SelectedStep="@selectedStep" SelectedStepChanged="@OnSelectedStepChanged">
        <Items>
            <Step Name="step1">Enter Credentials</Step>
            <Step Name="step2">Review Details</Step>
            <Step Name="step3">Finish</Step>
        </Items>
        <Content>
            <StepPanel Name="step1">
                <h3>Login</h3>
                <Validations @ref="fluentValidations" Mode="ValidationMode.Manual" Model="@loginModel" HandlerType="typeof(FluentValidationHandler)">
                    <Validation>
                        <Field>
                            <Label for="username" class="form-label">Username:</Label>
                            <TextEdit id="username" class="form-control" @bind-Text="loginModel.Username">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>

                    <Validation>
                        <Field>
                            <Label for="password" class="form-label">Password:</Label>
                            <TextEdit id="password" class="form-control" @bind-Text="loginModel.Password" TextMode="TextMode.Password">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>

                    <Div style="display:flex;justify-content:center;align-items:center;">
                        <Button Color="Color.Primary" Clicked="@HandleValidSubmit">Next</Button>
                    </Div>
                </Validations>
            </StepPanel>

            <StepPanel Name="step2">
                <h3><strong>Review Details</strong></h3>
                <p style="font-weight:bold;font-size:1rem">Username: @loginModel.Username</p>
                <Div>
                    <Button Color="Color.Secondary" Clicked="GoBackToStep1">Back</Button>&nbsp;&nbsp;
                    <Button Color="Color.Primary" Clicked="FinishLogin">Finish</Button>
                </Div>
            </StepPanel>

            <StepPanel Name="step3">
                <h3>Login Successful!</h3>
                <p><strong>You have successfully logged in</strong></p>
                <p><strong>Welcome, @loginModel.Username!</strong></p>
            </StepPanel>
        </Content>
    </Steps>
</div>

@code {
    private string selectedStep = "step1";
    private Validations fluentValidations;
    private LoginModel loginModel = new LoginModel();

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    private Task OnSelectedStepChanged(string name)
    {
        selectedStep = name;
        return Task.CompletedTask;
    }

    private Task GoBackToStep1()
    {
        selectedStep = "step1";
        return Task.CompletedTask;
    }

    private async Task FinishLogin()
    {
        selectedStep = "step3";
        await Task.Delay(2000);
        NavigationManager.NavigateTo("/form");
    }

    private async Task HandleValidSubmit()
    {
        var isValid = await fluentValidations.ValidateAll();

        if (isValid)
        {
            selectedStep = "step2";
            Console.WriteLine("Login successful!");
        }
        else
        {
            Console.WriteLine("Validation failed.");
        }
    }
}
